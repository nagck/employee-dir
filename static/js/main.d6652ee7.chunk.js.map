{"version":3,"sources":["components/header.jsx","components/search.jsx","components/EmployeeTable.jsx","utils/API.js","components/MainContainer.jsx","App.js","index.js"],"names":["Header","className","SearchBar","props","onSubmit","handleFormSubmit","value","name","onChange","handleInputChange","type","placeholder","EmployeeTable","scope","data-field","data-sortable","onClick","sortBy","state","filteredEmployees","map","employee","first","last","fullName","dob","formatDate","date","src","picture","thumbnail","alt","href","phone","email","login","uuid","API","getEmployees","axios","get","EmployeesContainer","search","employees","sortDirections","initialSortDirections","event","target","setState","filterEmployees","toLowerCase","trim","preventDefault","key","primary","secondary","sortedEmployees","reverse","sort","a","b","localeCompare","input","filter","concat","includes","replace","Date","push","getMonth","slice","getDate","getFullYear","join","then","res","data","results","catch","err","console","log","this","Component","App","MainContainer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6652ee7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./header.css\";\n\nconst Header = () => {\n  return (\n    <header>\n      <h1 className=\"text-center\">Employee Directory</h1>\n      <p className=\"text-center\">\n        Click on column headers to filter by heading or use the search box to narrow\n        your results.\n      </p>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./search.css\";\n\nconst SearchBar = (props) => {\n  return (\n    <nav className=\"navbar navbar-light bg-light justify-content-center\">\n      <form className=\"form-inline m-2\" onSubmit={props.handleFormSubmit}>\n        <input\n          className=\"form-control\"\n          value={props.value}\n          name=\"search\"\n          onChange={props.handleInputChange}\n          type=\"search\"\n          placeholder=\"Search\"\n        />\n      </form>\n    </nav>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\nimport \"./EmployeeTable.css\"\n\nconst EmployeeTable = (props) => {\n  return (\n    <table className=\"table table-striped table-sortable text-center\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Image</th>\n          <th scope=\"col\" data-field=\"name\" data-sortable=\"true\">\n            <span onClick={() => props.sortBy(\"name\", \"last\", \"first\")}>\n              Name\n            </span>\n          </th>\n          <th scope=\"col\">\n            <span onClick={() => props.sortBy(\"phone\")}>Phone</span>\n          </th>\n          <th scope=\"col\">\n            <span onClick={() => props.sortBy(\"email\")}>Email</span>\n          </th>\n          <th scope=\"col\">\n            <span onClick={() => props.sortBy(\"dob\", \"date\")}>DOB</span>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.state.filteredEmployees.map((employee) => {\n          const { first, last } = employee.name;\n          const fullName = `${first} ${last}`;\n\n          const dob = props.formatDate(employee.dob.date);\n\n          return (\n            <tr key={employee.login.uuid}>\n              <td>\n                <img src={employee.picture.thumbnail} alt={fullName} />\n              </td>\n              <td className=\"align-middle\">{fullName}</td>\n              <td className=\"align-middle\">\n              <a href={`tel:+1${employee.phone}`}>{employee.phone}</a></td>\n              <td className=\"align-middle email\">\n                <a href={`mailto:${employee.email}`}>{employee.email}</a>\n              </td>\n              <td className=\"align-middle\">{dob}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default EmployeeTable;\n","import axios from \"axios\";\r\n\r\nconst URL = \"https://randomuser.me/api/?results=50&nat=ca\"\r\n\r\n// Export object with a \"getEmployees\" method that returns Employee List from the Random user API\r\nconst API = {\r\n    getEmployees: function() {\r\n        return axios.get(URL);\r\n    }\r\n};\r\n  \r\n  export default API;","import React, { Component } from \"react\";\nimport SearchBar from \"./search\";\nimport EmployeeTable from \"./EmployeeTable\";\nimport API from \"../utils/API\";\n\nclass EmployeesContainer extends Component {\n  state = {\n    search: \"\",\n    employees: [],\n    filteredEmployees: [],\n    sortDirections: this.initialSortDirections,\n  };\n\n  get initialSortDirections() {\n    return {\n      name: \"\",\n      phone: \"\",\n      email: \"\",\n      dob: \"\",\n    };\n  }\n\n  // When this component mounts, load random users as employees from https://randomuser.me/\n  componentDidMount() {\n    API.getEmployees()\n      .then((res) =>\n        this.setState({\n          employees: res.data.results,\n          filteredEmployees: res.data.results,\n        })\n      )\n      .catch((err) => console.log(err));\n  }\n\n  // Update search state to filter by employee name\n  handleInputChange = (event) => {\n    const value = event.target.value;\n    this.setState({ search: value });\n    this.filterEmployees(value.toLowerCase().trim());\n  };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  // Sort with the key of specified object.\n  sortBy = (key, primary = 0, secondary = 0) => {\n    let sortedEmployees = this.state.filteredEmployees;\n    if (this.state.sortDirections[key]) {\n      this.setState({\n        filteredEmployees: sortedEmployees.reverse(),\n        sortDirections: {\n          ...this.initialSortDirections,\n          [key]: this.state.sortDirections[key] === \"asc\" ? \"desc\" : \"asc\",\n        },\n      });\n    } else {\n      sortedEmployees = this.state.filteredEmployees.sort((a, b) => {\n        a = a[key];\n        b = b[key];\n\n        // If secondary comparison given and primary comparison is equal then sort that instance by primary\n        if (primary) {\n          if (secondary && a[primary] === b[primary]) {\n            return a[secondary].localeCompare(b[secondary]);\n          }\n          return a[primary].localeCompare(b[primary]);\n        } else {\n          return a.localeCompare(b);\n        }\n      });\n\n      this.setState({\n        filteredEmployees: sortedEmployees,\n        sortDirections: {\n          ...this.initialSortDirections,\n          [key]: \"asc\",\n        },\n      });\n    }\n  };\n\n  filterEmployees = (input) => {\n    if (input) {\n      this.setState({\n        filteredEmployees: this.state.employees.filter((employee) => {\n          return (\n            employee.name.first\n              .toLowerCase()\n              .concat(\" \", employee.name.last.toLowerCase())\n              .includes(input) ||\n            employee.phone.includes(input) ||\n            employee.phone.replace(/[^\\w\\s]/gi, \"\").includes(input) ||\n            employee.email.includes(input) ||\n            this.formatDate(employee.dob.date).includes(input)\n          );\n        }),\n      });\n    } else {\n      this.setState({ filteredEmployees: this.state.employees });\n    }\n  };\n\n  formatDate = (date) => {\n    date = new Date(date);\n    let dob = [];\n    dob.push((\"0\" + (date.getMonth() + 1)).slice(-2));\n    dob.push((\"0\" + date.getDate()).slice(-2));\n    dob.push(date.getFullYear());\n\n    // Join formatted date\n    return dob.join(\"-\");\n  };\n\n  render() {\n    return (\n      <>\n        <SearchBar\n          value={this.state.search}\n          handleInputChange={this.handleInputChange}\n          handleFormSubmit={this.handleFormSubmit}\n        />\n        <div className=\"container mt-4\">\n          <EmployeeTable\n            state={this.state}\n            sortBy={this.sortBy}\n            filterEmployees={this.filterEmployees}\n            formatDate={this.formatDate}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default EmployeesContainer;\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/header\";\nimport MainContainer from \"./components/MainContainer\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <MainContainer />\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}